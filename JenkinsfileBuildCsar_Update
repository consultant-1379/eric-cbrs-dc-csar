#!/usr/bin/env groovy

/* IMPORTANT:
 *
 * In order to make this pipeline work, the following configuration on Jenkins is required:
 * - slave with a specific label (see pipeline.agent.label below)
 * - credentials plugin should be installed and have the secrets with the following names:
 *   + cbrsciadm credentials (token to access Artifactory)
 */

def defaultBobImage = 'armdocker.rnd.ericsson.se/proj-adp-cicd-drop/bob.2.0:latest'
def bob = new BobCommand()
        .bobImage(defaultBobImage)
		.envVars([
        HOME:'${HOME}',
		CSAR_PACKAGE_NAME:'${CSAR_PACKAGE_NAME}',
		PWD:'${PWD}',
		HELM_REPO_TOKEN:'${HELM_REPO_TOKEN}',
		INT_CHART_REPO:'${INT_CHART_REPO}',
        INT_CHART_VERSION:'${INT_CHART_VERSION}',
		GERRIT_USERNAME:'${GERRIT_USERNAME}',
		CBRS_SSH:'${CBRS_SSH}',
        GERRIT_PASSWORD:'${GERRIT_PASSWORD}'
    ])
        .needDockerSocket(true)
        .toString()

pipeline {
    agent {
            node
            {
            label "GE7_Docker"
            }
		}
    parameters {
	    string(name: 'INT_CHART_REPO', defaultValue: 'https://arm.seli.gic.ericsson.se/artifactory/proj-eric-cbrs-dc-drop-helm', description: 'The URL for Integration chart eric-cbrs-dc-package ')
        string(name: 'INT_CHART_VERSION', defaultValue: '0.3.0-30', description: 'The chart version of eric-cbrs-dc-package (e.g. 1.0.0-7)')
    }
    stages {
        stage('update common properties') {
            steps {
                withCredentials([usernamePassword(credentialsId: 'Gerrit HTTP',
                                 usernameVariable: 'GERRIT_USERNAME',
                                 passwordVariable: 'GERRIT_PASSWORD'),
				file(credentialsId: 'cbrsciadm_ssh_key', variable: 'CBRS_SSH')])
                {
                    sh "${bob} update-common-properties "
                    sh "cat common-properties.yaml"
                }
            }
        }
    }
		  post {
		     always{
			 deleteDir()
			 }
		 }
		 }

// More about @Builder: http://mrhaki.blogspot.com/2014/05/groovy-goodness-use-builder-ast.html
import groovy.transform.builder.Builder
import groovy.transform.builder.SimpleStrategy

@Builder(builderStrategy = SimpleStrategy, prefix = '')
class BobCommand {

    def bobImage = 'bob.2.0:latest'
    def envVars = [:]

    def needDockerSocket = false

    String toString() {
        def env = envVars
                .collect({ entry -> "-e ${entry.key}=\"${entry.value}\"" })
                .join(' ')

        def cmd = """\
            |docker run
            |--init
            |--rm
            |--workdir \${PWD}
            |--user \$(id -u):\$(id -g)
            |-v \${PWD}:\${PWD}
            |-v /etc/group:/etc/group:ro
            |-v /etc/passwd:/etc/passwd:ro
            |-v \${HOME}:\${HOME}
            |${needDockerSocket ? '-v /var/run/docker.sock:/var/run/docker.sock' : ''}
            |${env}
            |\$(for group in \$(id -G); do printf ' --group-add %s' "\$group"; done)
            |--group-add \$(stat -c '%g' /var/run/docker.sock)
            |${bobImage}
            |"""
        return cmd
                .stripMargin()           // remove indentation
                .replace('\n', ' ')      // join lines
                .replaceAll(/[ ]+/, ' ') // replace multiple spaces by one
    }
}
